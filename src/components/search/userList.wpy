<template>
  <scroll-view @scrolltolower="load" scroll-y wx:if="{{ listData.length }}" class="data__wrapper">
    <repeat for="{{ listData }}" key="index" index="index" item="item">
      <view class="user" @tap="watchUser({{ item.name }})">
        <view class="avatar__wrapper">
          <custom_image 
                image-class="avatar__img" 
                img-src="{{ item.avatarUrl }}"></custom_image>
        </view>
        <view class="username">{{ item.name }}</view>
      </view>
    </repeat>
    <view wx:if="{{ loading }}" class="loading-wrapper">
        <image style="display: block;margin: 0 auto;width: 80rpx;height: 80rpx;" src="../../images/loading.svg" />
    </view>
  </scroll-view>
  <view class="empty__block" wx:if="{{ !listData.length }}">
    <view style="margin: 0 0 20rpx;">No search results</view>
    <view>(T ^ T)</view>
  </view>
</template>

<script>
import wepy from 'wepy'
import * as services from '@/utils/services'

export default class UserList extends wepy.component {
    data = {
        search: '',
        pageNo: 1,
        listData: [],
        loading: false
    }

    events = {
        async search(q) {
            this.search = q
            this.pageNo = 1
            await this.addUsers(true)
        }
    }

    methods = {
        async load() {
            if (this.loading) {
                return null
            }
            await this.addUsers()
        },
        watchUser(name) {
            wepy.navigateTo({
                url: `./userDetail?name=${name}`
            })
        }
    }

    async addUsers(type) {
        this.loading = true
        const result = await services.searchUsers(this.search, this.pageNo)
        if (result.statusCode === 200) {
            const {
                data: {
                total_count: totalCount,
                items = []
                }
            } = result
            const data = items.map(current => ({
                avatarUrl: current.avatar_url,
                name: current.login,
                url: current.url
            }))
            if (type) {
                this.listData = data
            } else {
                this.listData.push(...data)
            }
            this.pageNo++

            this.$emit('updateTotal', `(${totalCount})`, 1)
        }
        this.loading = false
        this.$apply()
    }
}
</script>

<style lang='less'>
  @main_color: rgb(39, 100, 253);

  .data__wrapper {
    height: 100%;
    overflow: auto;

    .user {
      display: flex;
      padding: 20rpx;

      .avatar__wrapper {
        display: flex;
        align-items: center;
        font-size: 32rpx;
        font-weight: 500;
        align-items: center;

        .avatar__img {
          width: 100rpx;
          height: 100rpx;
          border-radius: 50%;
          margin: 0 30rpx;
          background: rgba(0, 0, 0, 0.1);
        }
      }
    }
  }

  .empty__block {
    color: @main_color;
    text-align: center;
    font-size: 50rpx;
    font-weight: 400;
    padding-top: 40%;
  }
</style>
